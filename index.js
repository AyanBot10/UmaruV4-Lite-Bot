import{spawn as e,execSync as s,exec as o}from"child_process";import t from"fs";import r from"os";const n=process.env.hasOwnProperty("REPL_OWNER")?"replit":process.env.hasOwnProperty("CSB_SANDBOX_ID")?"csb":process.env.hasOwnProperty("CODESPACE_NAME")?"codespace":process.env.HOSTNAME&&process.env.STARTUP&&process.env.SERVER_PORT?"pterodactyl":process.env.npm_node_execpath&&process.env.npm_node_execpath.toLowerCase().includes("heroku")?"heroku":process.env.hasOwnProperty("RENDER")?"render":r.platform();import a from"readline";const i=["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"];process.stdout.isTTY||(process.stdout.clearLine=function(){console.log("")},process.stdout.cursorTo=function(){console.log("")});let c=JSON.parse(t.readFileSync("package.json"));t.existsSync("./node_modules")||t.mkdirSync("./node_modules");let p=t.readdirSync("./node_modules");if(c.compiled!=n&&!p.includes("chalk")&&!p.includes("moment-timezone"))for(const e of["chalk","moment-timezone"])s("npm install "+e+"@latest");import{fileURLToPath as l}from"url";import{dirname as d,join as m}from"path";const u=d(l(import.meta.url));let y={};(async()=>{const r=await import("./system/lib/index.js"),p=function(e,s){let n=!0;return new Promise((a=>{if(t.readdirSync("./node_modules").includes(e))return a(!0);if(void 0===s||""==s){process.stdout.clearLine(),process.stdout.cursorTo(0);let s=0,c=setInterval((()=>{s>=i.length&&(s=0),r.animation(`Installing ${e} `+i[s++])}),100);o(`npm i ${e}`,(async(s,o,i)=>{clearInterval(c),!JSON.parse(await t.promises.readFile(u+"/package.json")).dependencies.hasOwnProperty(e)&&i&&(process.stdout.clearLine(),process.stdout.cursorTo(0),n=!1,r.sys(`Installation failed ${e} \n`+i.trim())),process.stdout.clearLine(),process.stdout.cursorTo(0),a(n)}))}else{process.stdout.clearLine(),process.stdout.cursorTo(0);let c=0,p=setInterval((()=>{c>=i.length&&(c=0),r.animation(`Installing ${e}@${s.replace(/\^|@/g,"")} `+i[c++])}),100);o(`npm i ${e}@${s.replace(/\^|@/g,"")}`,(async(o,i,c)=>{clearInterval(p),!JSON.parse(await t.promises.readFile(u+"/package.json")).dependencies.hasOwnProperty(e)&&c&&(process.stdout.clearLine(),process.stdout.cursorTo(0),r.sys(`Installation failed ${e}@${s.replace(/\^|@/g,"")} \n`+c.trim()),n=!1),process.stdout.clearLine(),process.stdout.cursorTo(0),a(n)}))}}))};let l=["@distube/ytdl-core","ansi-to-html","axios","chalk","fca-umaru-v1","fca-umaru-v2","fs-extra","koa","koa-body","koa-compress","koa-cookie","koa-mount","koa-router","koa-send","koa-static","moment-timezone","msgpackr","node-cron","ws"];if(c.compiled==n||(process.env.hasOwnProperty("REPL_OWNER")||process.env.hasOwnProperty("CSB_SANDBOX_ID")||process.env.hasOwnProperty("CODESPACE_NAME")||process.env.HOSTNAME&&process.env.STARTUP&&process.env.SERVER_PORT||process.env.npm_node_execpath&&process.env.npm_node_execpath.toLowerCase().includes("heroku")||process.env.hasOwnProperty("RENDER"))){if(c.compiled!=n){for(const g of l)await p(g,"latest");c=JSON.parse(await t.promises.readFile("package.json")),c.compiled=n,await t.promises.writeFile("package.json",JSON.stringify(c,null,"\t"))}}else{"android"==n&&s("pkg install ffmpeg -y && pkg install python -y && pkg install make -y && pkg install clang -y && pkg install binutils -y");for(const h of l)await p(h,"latest");process.stdout.isTTY?await new Promise((e=>{const s=a.createInterface({input:process.stdin,output:process.stdout});s.question(r.logValue("Umaru","Do you want to install sqlite database? [Y/n] "),(async o=>{o.toLowerCase().startsWith("y")?(await p("better-sqlite3","latest"),(o=JSON.parse(await t.promises.readFile("./config.json"))).SqliteDB=!0,await t.promises.writeFile("./config.json",JSON.stringify(o,null,"\t"))):((o=JSON.parse(await t.promises.readFile("./config.json"))).SqliteDB=!1,await t.promises.writeFile("./config.json",JSON.stringify(o,null,"\t"))),s.close(),e()}))})):await p("better-sqlite3","latest"),c=JSON.parse(await t.promises.readFile("package.json")),c.compiled=n,await t.promises.writeFile("package.json",JSON.stringify(c,null,"\t"))}const d=(await import("koa")).default;if(!(process.env.hasOwnProperty("REPL_OWNER")||process.env.hasOwnProperty("CSB_SANDBOX_ID")||process.env.HOSTNAME&&process.env.STARTUP&&process.env.SERVER_PORT||process.env.npm_node_execpath&&process.env.npm_node_execpath.toLowerCase().includes("heroku")||process.env.hasOwnProperty("RENDER"))){const S=function(e){return new Promise(((s,o)=>{try{let r=t.createReadStream(e),n=[];r.on("data",(e=>{n.push(e)})),r.on("end",(async()=>{s(Buffer.concat(n))})),r.on("error",(e=>{o(e)}))}catch(e){o(e)}}))};try{y=JSON.parse(await S("./config.json")),await t.promises.copyFile("./config.json","./system/config.json.backup")}catch(P){if(!t.existsSync("./system/config.json.backup"))return r.sys("config.json not found");await t.promises.copyFile("./system/config.json.backup",umaru.configPath)}t.watch("./config.json",(async()=>{try{y=JSON.parse(await S("./config.json"))}catch{}}));const O=new d;function k(e){return O.listen(e,(async()=>{y.currentMainPort=v.address().port,await t.promises.writeFile("./config.json",JSON.stringify(y,null,"\t"))}))}O.use((async(e,s)=>{"/url"===e.originalUrl?e.body=y.dashboard:e.redirect(y.dashboard+e.originalUrl),await s()}));let v=k(y.PORT);v.on("error",(()=>{v=k(0)}))}let m=process.cwd(),f=process.cwd()+"/system";function w(e,s){let o=s.split(/\/|\\/).filter((e=>""!==e)),r="";r+=e;for(const e of o)r+="/"+e,t.existsSync(r)||t.mkdirSync(r)}w(m,"acct"),w(m,"bin"),w(m,"data/Threads"),w(m,"data/Users"),w(m,"storage/emulated/0"),w(m,"storage/emulated/0/Pictures"),w(m,"storage/emulated/0/Music"),w(m,"storage/emulated/0/Movies"),w(m,"storage/emulated/0/Download"),await t.promises.writeFile("./bin/log",""),w(f,"app/commands/cache"),w(f,"app/commands/tmp"),w(f,"app/commands/noprefix"),w(f,"app/commands/shortcut"),w(f,"etc/languages"),function s(){t.writeFileSync(process.cwd()+"/bin/log","");const o=e("node",["umaru.js"],{stdio:"inherit",cwd:u+"/system",shell:!0});o.on("close",(async e=>0==e?r.sys("Shutdown"):1==e?(r.sys("Restarting..."),s()):void 0)),o.on("error",(function(e){r.log("[ System ] An error occurred: "+JSON.stringify(e))}))}()})();